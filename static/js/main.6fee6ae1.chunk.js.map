{"version":3,"sources":["App.js","index.js"],"names":["App","props","handleSearchChange","e","setState","searchQuery","target","value","sendRequest","state","fetch","process","then","response","json","weather","isLoading","handleSearchSubmit","key","textTime","isText","nextProps","nextState","nextContext","undefined","name","this","setTimeout","className","main","temp","type","placeholder","onChange","onKeyDown","disabled","sys","country","DateTime","fromSeconds","dt","toLocaleString","DATE_HUGE","Math","round","Component","ReactDOM","render","document","getElementById"],"mappings":"4MAkIeA,E,kDAzHb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAURC,mBAAqB,SAACC,GACpB,EAAKC,SAAS,CACZC,YAAaF,EAAEG,OAAOC,SAbP,EAiBnBC,YAAc,WAAO,IACZH,EAAe,EAAKI,MAApBJ,YAEPK,MAAM,GAAD,OAxBO,2CAwBP,qBAAwBL,EAAxB,kBAvBOM,mCAuBP,kBAEFC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GAAD,OACJ,EAAKT,SAAS,CACZW,QAASF,EACTG,WAAW,QA1BA,EA+BnBC,mBAAqB,SAACd,GACN,UAAVA,EAAEe,KAIN,EAAKd,SAAS,CACZY,WAAW,GACV,EAAKR,cAtCS,EA0CnBW,SAAW,WACT,EAAKV,MAAMW,OACT,EAAKhB,SAAS,CACZgB,QAAQ,IAEV,EAAKhB,SAAS,CACZgB,QAAQ,KA7CZ,EAAKX,MAAQ,CACXJ,YAAa,GACbU,QAAS,KACTC,WAAW,EACXI,QAAQ,GAPO,E,yDAoDnB,SAAsBC,EAAWC,EAAWC,GAC1C,OAA0B,OAAtBD,EAAUP,cACmBS,IAA3BF,EAAUP,QAAQU,OACpBC,KAAKP,WACLQ,WAAWD,KAAKP,SAAU,KAC1BO,KAAKtB,SAAS,CACZC,YAAa,GACbW,WAAW,EACXD,QAAS,QAEJ,K,oBAMb,WAAU,IAAD,EAC2CW,KAAKjB,MAAhDJ,EADA,EACAA,YAAaU,EADb,EACaA,QAASC,EADtB,EACsBA,UAAWI,EADjC,EACiCA,OAExC,OACE,sBACEQ,UACEb,GAAWA,EAAQc,KAAKC,KAAO,EAAI,iBAAmB,YAF1D,UAKE,uBACEC,KAAK,OACLC,YAAY,YACZJ,UAAU,eACVrB,MAAOF,EACP4B,SAAUP,KAAKxB,mBACfgC,UAAWR,KAAKT,mBAChBkB,UAAwB,IAAdnB,IAGXA,EAAY,sBAAKY,UAAU,SAAf,UACX,qBAAKA,UAAU,SACf,qBAAKA,UAAU,SACf,qBAAKA,UAAU,SACf,qBAAKA,UAAU,SACf,qBAAKA,UAAU,SACf,qBAAKA,UAAU,SACf,qBAAKA,UAAU,YACR,KAERb,EACC,gCACE,sBAAKa,UAAU,mBAAf,UACE,sBAAKA,UAAU,WAAf,UACGb,EAAQU,KADX,KACmBV,EAAQqB,IAAIC,WAE/B,qBAAKT,UAAU,OAAf,SACGU,WAASC,YAAYxB,EAAQyB,IAAIC,eAChCH,WAASI,gBAIf,sBAAKd,UAAU,kBAAf,UACE,sBAAKA,UAAU,OAAf,UAAuBe,KAAKC,MAAM7B,EAAQc,KAAKC,MAA/C,WACA,qBAAKF,UAAU,UAAf,SAA0Bb,EAAQA,QAAQ,GAAGc,aAG/C,KACHT,EAAS,qBAAKQ,UAAU,OAAf,qCAAsD,Y,GApHtDiB,aCHlBC,IAASC,OACL,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.6fee6ae1.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {DateTime} from 'luxon';\n\nimport './App.css';\n\nconst API_URL = 'https://api.openweathermap.org/data/2.5/';\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      searchQuery: '',\n      weather: null,\n      isLoading: false,\n      isText: false,\n    };\n  }\n\n  handleSearchChange = (e) => {\n    this.setState({\n      searchQuery: e.target.value,\n    });\n  };\n\n  sendRequest = () => {\n    const {searchQuery} = this.state;\n\n    fetch(`${API_URL}weather?q=${searchQuery}&appid=${API_KEY}&units=metric`,\n    )\n      .then((response) => response.json())\n      .then((response) =>\n        this.setState({\n          weather: response,\n          isLoading: false,\n        })\n      );\n  };\n\n  handleSearchSubmit = (e) => {\n    if (e.key !== 'Enter') {\n      return;\n    }\n\n    this.setState({\n      isLoading: true,\n    }, this.sendRequest);\n\n  };\n\n  textTime = () => {\n    this.state.isText ?\n      this.setState({\n        isText: false,\n      }) :\n      this.setState({\n        isText: true,\n      })\n  }\n\n  shouldComponentUpdate(nextProps, nextState, nextContext) {\n    if (nextState.weather !== null) {\n      if (nextState.weather.name === undefined) {\n        this.textTime();\n        setTimeout(this.textTime, 2000)\n        this.setState({\n          searchQuery: '',\n          isLoading: false,\n          weather: null,\n        })\n        return false\n      }\n    }\n    return true\n  }\n\n  render() {\n    const {searchQuery, weather, isLoading, isText} = this.state;\n\n    return (\n      <div\n        className={\n          weather && weather.main.temp < 0 ? 'container cold' : 'container'\n        }\n      >\n        <input\n          type=\"text\"\n          placeholder=\"Search...\"\n          className=\"search-input\"\n          value={searchQuery}\n          onChange={this.handleSearchChange}\n          onKeyDown={this.handleSearchSubmit}\n          disabled={isLoading === true}\n        />\n\n        {isLoading ? <div className=\"loader\">\n          <div className=\"dot1\"/>\n          <div className=\"dot2\"/>\n          <div className=\"dot3\"/>\n          <div className=\"dot4\"/>\n          <div className=\"dot5\"/>\n          <div className=\"dot6\"/>\n          <div className=\"dot7\"/>\n        </div> : null}\n\n        {weather ? (\n          <div>\n            <div className=\"location-wrapper\">\n              <div className=\"location\">\n                {weather.name}, {weather.sys.country}\n              </div>\n              <div className=\"date\">\n                {DateTime.fromSeconds(weather.dt).toLocaleString(\n                  DateTime.DATE_HUGE\n                )}\n              </div>\n            </div>\n            <div className=\"weather-wrapper\">\n              <div className=\"temp\">{Math.round(weather.main.temp)}Â°C</div>\n              <div className=\"weather\">{weather.weather[0].main}</div>\n            </div>\n          </div>\n        ) : null}\n        {isText ? <div className=\"text\">\"There is no such city\"</div> : null}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n    <App/>, document.getElementById('root')\n);\n"],"sourceRoot":""}